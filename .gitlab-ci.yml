variables:
  DOCKER_DRIVER: overlay
  # You must set the pip cache directory to be inside project dir since we can only
  # cache local items.
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DOCKER_COMPOSE_BASE: "docker-compose.yml"

include: "https://gitlab.com/tomfordweb/gitlab-ci-templates/-/raw/compose/docker-compose-template.yml"

stages:
  - prep
  - build
  - test

# This cache is not used by any built images, but is a cache for any python build tools
# the project needs
cache:
  key: ${CI_PROJECT_NAME}
  paths:
    - .cache/pip
build feature:
  stage: build
  variables:

test feature:
  stage: test
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    # Hacky, but it doesn't matter since the compose file isnt an artifact in this job
    # docker-compose run api does not let you specify
    # custom dockerfiles, it assumes the default docker-compose.yml
    - rm docker-compose.yml
    - cp ${TEST_COMPOSE_FILE} docker-compose.yml
    - docker-compose pull
    # Run frontend tests
    - docker-compose run frontend npm run test
